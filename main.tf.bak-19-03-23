terraform {
  required_version = ">=0.12"
  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
      version = "=3.47.0"
    }
  }
}

provider "azurerm" {
  features {}
  subscription_id = ""        # Vignesh Azure subscription(Free Tier)
  skip_provider_registration = true
}

variable "location" {
  type = string
  default = "Central India"
}

variable "resource_group_name" {
  type = string
  default = ""
}

resource "azurerm_network_security_group" "demo1" {
  name                = "terraform"
  location            = var.location
  resource_group_name = var.resource_group_name

  security_rule {
    name                       = "terraform123"
    priority                   = 100
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "Tcp"
    source_port_range          = "*"
    destination_port_range     = "22"
    source_address_prefix      = "120.72.93.91/32"
    destination_address_prefix = "*"
  }

  tags = {
    environment = "Dev"
  }
}

resource "azurerm_virtual_network" "example" {
  name                = "example-network"
  location            = var.location
  resource_group_name = var.resource_group_name
  address_space       = ["10.0.0.0/16"]
  dns_servers         = ["10.0.0.4", "10.0.0.5"]

  tags = {
    environment = "Dev"
  }
}

resource "azurerm_subnet" "private1" {
  name                 = "private-subnet1"
  resource_group_name  = var.resource_group_name
  virtual_network_name = azurerm_virtual_network.example.name
  address_prefixes     = ["10.0.1.0/24"]
}


#############---------------Public Subnet-1------------------_################
resource "azurerm_subnet" "public1" {
  name                 = "AzureBastionSubnet"
  resource_group_name  = var.resource_group_name
  virtual_network_name = azurerm_virtual_network.example.name
  address_prefixes     = ["10.0.2.0/24"]
}
resource "azurerm_route_table" "public1" {
  name                          = "example-route-table"
  location                      = var.location
  resource_group_name           = var.resource_group_name
  disable_bgp_route_propagation = false

  route {
    name           = "internet"
    address_prefix = "0.0.0.0/0"
    next_hop_type  = "Internet"
  }

  route {
    name           = "local"
    address_prefix = "10.0.0.0/16"
    next_hop_type  = "VnetLocal"
  }

  tags = {
    environment = "Production"
  }
}

resource "azurerm_subnet_route_table_association" "public1" {
  subnet_id      = azurerm_subnet.public1.id
  route_table_id = azurerm_route_table.public1.id
}

#############---------------Private Subnet-2 ------------------_################
resource "azurerm_subnet" "priority2" {
  name                 = "private-subnet2"
  resource_group_name  = var.resource_group_name
  virtual_network_name = azurerm_virtual_network.example.name
  address_prefixes     = ["10.0.3.0/24"]
}


#############---------------Public Subnet-2 ------------------_################
resource "azurerm_subnet" "public2" {
  name                 = "public-subnet2"
  resource_group_name  = var.resource_group_name
  virtual_network_name = azurerm_virtual_network.example.name
  address_prefixes     = ["10.0.4.0/24"]
}


resource "azurerm_public_ip" "example" {
  name                = "examplepip"
  location            = var.location
  resource_group_name = var.resource_group_name
  allocation_method   = "Static"
  sku                 = "Standard"
}

# resource "azurerm_bastion_host" "example" {
#   name                = "examplebastion"
#   location            = var.location
#   resource_group_name = var.resource_group_name
#   ip_configuration {
#     name                 = "configuration"
#     subnet_id            = azurerm_subnet.public1.id
#     public_ip_address_id = azurerm_public_ip.example.id
#   }
# }

###########-----------Azure AKS--------------############
resource "azurerm_kubernetes_cluster" "example" {
  name                = "example-aks1"
  location            = var.location
  resource_group_name = var.resource_group_name
  dns_prefix          = "rx4demo"

  linux_profile {
    ssh_key {
    key_data = file("~/.ssh/id_rsa.pub")
  }
    admin_username =  "rx4"
  }

  default_node_pool {
    name       = "default"
    node_count = 1
    min_count = 1
    max_count = 2
    vm_size    = "Standard_D2_v2"
    enable_auto_scaling = true
    enable_node_public_ip = true
    #vnet_subnet_id = azurerm_subnet.public2.id
    os_disk_size_gb = 30
  }

  ingress_application_gateway {
    gateway_name = "rx4demo-ingress"
    subnet_cidr = "10.225.0.0/16"
  }

  identity {
    type = "SystemAssigned"
  }

  tags = {
    Environment = "Production"
  }
}
